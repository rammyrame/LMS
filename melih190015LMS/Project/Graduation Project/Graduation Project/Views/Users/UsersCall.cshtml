@model Graduation_Project.Models.Entity.TBLUSERS
@{
    ViewBag.Title = "UsersCall";
    Layout = "~/Views/Shared/Layout.cshtml";
}


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

<h2>UsersCall</h2>

@using (Html.BeginForm("UsersCall", "USERS", FormMethod.Post))
{
    <div style="margin-bottom:15px"></div>
    <div class="form-group">
        @Html.LabelFor(s => s.ID) @*The reason I use these commands here is to get the name of the columns directly. I could have defined a label instead.*@
        @Html.TextBoxFor(s => s.ID, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.NAME)
        @Html.TextBoxFor(s => s.NAME, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.SURNAME)
        @Html.TextBoxFor(s => s.SURNAME, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.MAIL)
        @Html.TextBoxFor(s => s.MAIL, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.USERNAME)
        @Html.TextBoxFor(s => s.USERNAME, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.PASSWORD)
        @Html.TextBoxFor(s => s.PASSWORD, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.PHOTO)
        @Html.TextBoxFor(s => s.PHOTO, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.PHONE)
        @Html.TextBoxFor(s => s.PHONE, new { @class = "form-control" })
        <br />
        @Html.LabelFor(s => s.SCHOOL)
        @Html.TextBoxFor(s => s.SCHOOL, new { @class = "form-control" })
        <br />
    </div>
    <div>
        <button class="btn btn-warning">Update</button>
    </div>
}
